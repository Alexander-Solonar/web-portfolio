{"version":3,"file":"static/js/110.5b5d48ba.chunk.js","mappings":"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","sources":["webpack://web-portfolio/./src/components/formFeedback/FormFeedback.module.scss?838b","components/formFeedback/FormFeedback.jsx","webpack://web-portfolio/./src/components/myContacts/MyContacts.module.scss?a0bf","components/myContacts/MyContacts.jsx","webpack://web-portfolio/./src/components/sectionContacts/SectionContacts.module.scss?115c","components/sectionContacts/SectionContacts.jsx","pages/pageContacts/PageContacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormFeedback_form__oWu83\",\"block\":\"FormFeedback_block__-z-K5\",\"label\":\"FormFeedback_label__bWw3t\",\"input\":\"FormFeedback_input__Er6lC\",\"textarea\":\"FormFeedback_textarea__Ken1p\",\"button\":\"FormFeedback_button__htcIx\",\"showBnt\":\"FormFeedback_showBnt__pyi5y\",\"error\":\"FormFeedback_error__IAbag\"};","import { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport Notiflix from 'notiflix';\nimport scss from './FormFeedback.module.scss';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p className={scss.error}>{message}</p>}\n    />\n  );\n};\n\nlet schema = object({\n  name: string().trim().required('Name is a required field'),\n  telegram: string().trim(),\n  email: string().email().required('Email is a required field'),\n  message: string().trim().required('Message is a required field'),\n});\n\nconst FormFeedback = () => {\n  const [isButtonDisabled, setButtonDisabled] = useState(false);\n  const { t } = useTranslation();\n  const notifySuccess = t('form.notify');\n\n  const initialValues = {\n    name: '',\n    telegram: '',\n    email: '',\n    message: '',\n  };\n\n  const handleSubmit = async (values, actions) => {\n    try {\n      setButtonDisabled(true);\n      actions.resetForm();\n      Notiflix.Notify.success(notifySuccess);\n      await fetch('https://my-portfolio-gytx.onrender.com/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n      });\n    } catch (error) {\n      Notiflix.Notify.failure(error.message);\n    } finally {\n      setButtonDisabled(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={scss.form} autoComplete=\"off\">\n        <div className={scss.block}>\n          <label className={scss.label}>\n            {t('form.name')}\n            <Field\n              className={scss.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder={t('form.placeholderN')}\n            />\n            <FormError name=\"name\" />\n          </label>\n\n          <label className={scss.label}>\n            {t('form.telegram')}\n            <Field\n              className={scss.input}\n              type=\"text\"\n              name=\"telegram\"\n              placeholder={t('form.placeholderT')}\n            />\n          </label>\n        </div>\n\n        <label className={scss.label}>\n          {t('form.email')}\n          <Field\n            className={scss.input}\n            type=\"email\"\n            name=\"email\"\n            placeholder={t('form.placeholderE')}\n          />\n          <FormError name=\"email\" />\n        </label>\n\n        <label className={scss.label}>\n          {t('form.message')}\n          <Field\n            className={scss.textarea}\n            as=\"textarea\"\n            name=\"message\"\n            placeholder={t('form.placeholderM')}\n          ></Field>\n          <FormError name=\"message\" />\n        </label>\n\n        <button\n          className={scss.button}\n          type=\"submit\"\n          disabled={isButtonDisabled}\n        >\n          {t('form.button')}\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FormFeedback;\n","// extracted by mini-css-extract-plugin\nexport default {\"block-contacts\":\"MyContacts_block-contacts__SU6In\",\"title\":\"MyContacts_title__ZpBLo\",\"list\":\"MyContacts_list__ADKv3\",\"item\":\"MyContacts_item__DIEE+\",\"link\":\"MyContacts_link__ZYmsc\",\"sun-title\":\"MyContacts_sun-title__RSPpj\",\"address\":\"MyContacts_address__RWpDa\"};","import { useTranslation } from 'react-i18next';\nimport icons from '../../assets/icons/icons.svg';\nimport flag from '../../assets/images/ukraine.png';\nimport scss from './MyContacts.module.scss';\n\nconst MyContacts = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={scss['block-contacts']}>\n      <h1 className={scss.title}>{t('contacts.title')}</h1>\n      <ul className={scss.list}>\n        <li className={scss.item}>\n          <a className={scss.link} href=\"tel:+380689441877\">\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-phone`} />\n            </svg>\n            <span>+38 068-944-18-77</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"mailto: solo991@ukr.net\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-email`} />\n            </svg>\n            <span>solo991@ukr.net</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"https://t.me/alexander_solonar\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-telegram`} />\n            </svg>\n            <span>Telegram</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"https://www.linkedin.com/in/alexandersolonar\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-linkedin`} />\n            </svg>\n            <span>Linkedin</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"https://github.com/Alexander-Solonar\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-github`} />\n            </svg>\n            <span>GitHub</span>\n          </a>\n        </li>\n      </ul>\n      <h3 className={scss['sun-title']}>{t('contacts.sub')} :</h3>\n      <address className={scss.address}>\n        <a\n          className={scss.link}\n          href=\"https://goo.gl/maps/qAHahXqh9R1bDvRt6\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer nofollow\"\n        >\n          {t('location')} <img width={24} src={flag} alt=\"flag-ukr\" />\n        </a>\n      </address>\n    </div>\n  );\n};\n\nexport default MyContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"SectionContacts_contacts__aOCHx\",\"contacts-light\":\"SectionContacts_contacts-light__tC2g4\",\"content\":\"SectionContacts_content__P9xen\"};","import { useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport clsx from \"clsx\";\nimport FormFeedback from \"../formFeedback\";\nimport MyContacts from \"../myContacts/MyContacts\";\nimport scss from \"./SectionContacts.module.scss\";\n\nconst SectionContacts = () => {\n  const { theme } = useContext(Context);\n  return (\n    <section className={clsx(scss.contacts, theme && scss[\"contacts-light\"])}>\n      <div className=\"container\">\n        <div className={scss.content}>\n          <MyContacts />\n          <FormFeedback />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionContacts;\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SectionContacts from '../../components/sectionContacts';\n\nconst PageContacts = () => {\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    document.title = t('title.contacts');\n    window.scrollTo(0, 0);\n  }, [t]);\n\n  return <SectionContacts />;\n};\n\nexport default PageContacts;\n"],"names":["FormError","_ref","name","_jsx","ErrorMessage","render","message","className","scss","children","schema","object","string","trim","required","telegram","email","_useState","useState","_useState2","_slicedToArray","isButtonDisabled","setButtonDisabled","t","useTranslation","notifySuccess","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","wrap","_context","prev","next","resetForm","Notiflix","success","fetch","method","headers","body","JSON","stringify","t0","failure","finish","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","onSubmit","_jsxs","Form","autoComplete","Field","type","placeholder","as","disabled","href","width","height","concat","icons","target","rel","src","alt","theme","useContext","Context","clsx","MyContacts","FormFeedback","useEffect","document","title","window","scrollTo","SectionContacts"],"sourceRoot":""}
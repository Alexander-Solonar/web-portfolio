{"version":3,"file":"static/js/87.a6ce5d7a.chunk.js","mappings":"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","sources":["services/SendMessageTg.ts","webpack://web-portfolio/./src/components/formFeedback/FormFeedback.module.scss?838b","components/formFeedback/FormFeedback.tsx","services/SendMessageEmail.ts","webpack://web-portfolio/./src/components/myContacts/MyContacts.module.scss?a0bf","components/myContacts/MyContacts.tsx","webpack://web-portfolio/./src/components/sectionContacts/SectionContacts.module.scss?115c","components/sectionContacts/SectionContacts.tsx","pages/pageContacts/PageContacts.tsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst TOKEN = '6758528711:AAEjayHvFKVDXyoLE5L4pwWbUVTF134hlSI';\nconst CHAT_ID = '-1002010097355';\nconst URL_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\n\ninterface Values {\n  name: string;\n  telegram: string;\n  email: string;\n  message: string;\n}\n\nexport const SendMessageTg = async (values: Values) => {\n  const { name, telegram, email, message } = values;\n  const text = `Повідомлення від: ${name}\\n${message}\\nTelegram: ${telegram}\\nEmail: ${email}`;\n  try {\n    await axios.post(\n      URL_API,\n      {\n        chat_id: CHAT_ID,\n        text,\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n  } catch (error: any) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormFeedback_form__oWu83\",\"block\":\"FormFeedback_block__-z-K5\",\"label\":\"FormFeedback_label__bWw3t\",\"input\":\"FormFeedback_input__Er6lC\",\"textarea\":\"FormFeedback_textarea__Ken1p\",\"button\":\"FormFeedback_button__htcIx\",\"showBnt\":\"FormFeedback_showBnt__pyi5y\",\"error\":\"FormFeedback_error__IAbag\"};","import { FC, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from 'formik';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport { SendMessageTg } from '../../services/SendMessageTg';\nimport { SendMessageEmail } from '../../services/SendMessageEmail';\nimport { FormFeedbackValues } from '../../interfaces';\nimport Notiflix from 'notiflix';\nimport scss from './FormFeedback.module.scss';\n\ninterface FormErrorProps {\n  name: string;\n}\n\nconst FormError: FC<FormErrorProps> = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p className={scss.error}>{message}</p>}\n    />\n  );\n};\n\nlet schema = object({\n  name: string().trim().required('Name is a required field'),\n  telegram: string().trim(),\n  email: string().email().required('Email is a required field'),\n  message: string().trim().required('Message is a required field'),\n});\n\nconst FormFeedback = () => {\n  const [isButtonDisabled, setButtonDisabled] = useState(false);\n  const { t } = useTranslation();\n  const notifySuccess = t('form.notify');\n\n  const initialValues = {\n    name: '',\n    telegram: '',\n    email: '',\n    message: '',\n  };\n\n  const handleSubmit = async (\n    values: FormFeedbackValues,\n    actions: FormikHelpers<FormFeedbackValues>\n  ) => {\n    setButtonDisabled(true);\n    actions.resetForm();\n    Notiflix.Notify.success(notifySuccess);\n    SendMessageEmail(values);\n    SendMessageTg(values);\n    setButtonDisabled(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={scss.form} autoComplete=\"off\">\n        <div className={scss.block}>\n          <label className={scss.label}>\n            {t('form.name')}\n            <Field\n              className={scss.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder={t('form.placeholderN')}\n            />\n            <FormError name=\"name\" />\n          </label>\n\n          <label className={scss.label}>\n            {t('form.telegram')}\n            <Field\n              className={scss.input}\n              type=\"text\"\n              name=\"telegram\"\n              placeholder={t('form.placeholderT')}\n            />\n          </label>\n        </div>\n\n        <label className={scss.label}>\n          {t('form.email')}\n          <Field\n            className={scss.input}\n            type=\"email\"\n            name=\"email\"\n            placeholder={t('form.placeholderE')}\n          />\n          <FormError name=\"email\" />\n        </label>\n\n        <label className={scss.label}>\n          {t('form.message')}\n          <Field\n            className={scss.textarea}\n            as=\"textarea\"\n            name=\"message\"\n            placeholder={t('form.placeholderM')}\n          ></Field>\n          <FormError name=\"message\" />\n        </label>\n\n        <button\n          className={scss.button}\n          type=\"submit\"\n          disabled={isButtonDisabled}\n        >\n          {t('form.button')}\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FormFeedback;\n","import Notiflix from 'notiflix';\n\nconst URL_API = 'https://my-portfolio-gytx.onrender.com/send-email';\n\ninterface Values {\n  name: string;\n  telegram: string;\n  email: string;\n  message: string;\n}\n\nexport const SendMessageEmail = async (values: Values) => {\n  console.log(values);\n  try {\n    await fetch(URL_API, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(values),\n    });\n  } catch (error: any) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"block-contacts\":\"MyContacts_block-contacts__SU6In\",\"title\":\"MyContacts_title__ZpBLo\",\"list\":\"MyContacts_list__ADKv3\",\"item\":\"MyContacts_item__DIEE+\",\"link\":\"MyContacts_link__ZYmsc\",\"sun-title\":\"MyContacts_sun-title__RSPpj\",\"address\":\"MyContacts_address__RWpDa\"};","import { useTranslation } from 'react-i18next';\nimport icons from '../../assets/icons/icons.svg';\nimport flag from '../../assets/images/ukraine.png';\nimport scss from './MyContacts.module.scss';\n\nconst MyContacts = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={scss['block-contacts']}>\n      <h1 className={scss.title}>{t('contacts.title')}</h1>\n      <ul className={scss.list}>\n        <li className={scss.item}>\n          <a className={scss.link} href=\"tel:+380689441877\">\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-phone`} />\n            </svg>\n            <span>+38 068-944-18-77</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"mailto: solo991@ukr.net\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-email`} />\n            </svg>\n            <span>solo991@ukr.net</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"https://t.me/alexander_solonar\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-telegram`} />\n            </svg>\n            <span>Telegram</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"https://www.linkedin.com/in/alexandersolonar\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-linkedin`} />\n            </svg>\n            <span>Linkedin</span>\n          </a>\n        </li>\n        <li className={scss.item}>\n          <a\n            className={scss.link}\n            href=\"https://github.com/Alexander-Solonar\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n          >\n            <svg width={22} height={22}>\n              <use href={`${icons}#icon-github`} />\n            </svg>\n            <span>GitHub</span>\n          </a>\n        </li>\n      </ul>\n      <h3 className={scss['sun-title']}>{t('contacts.sub')} :</h3>\n      <address className={scss.address}>\n        <a\n          className={scss.link}\n          href=\"https://goo.gl/maps/qAHahXqh9R1bDvRt6\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer nofollow\"\n        >\n          {t('location')} <img width={24} src={flag} alt=\"flag-ukr\" />\n        </a>\n      </address>\n    </div>\n  );\n};\n\nexport default MyContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"SectionContacts_contacts__aOCHx\",\"contacts-light\":\"SectionContacts_contacts-light__tC2g4\",\"content\":\"SectionContacts_content__P9xen\"};","import { useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport clsx from \"clsx\";\nimport FormFeedback from \"../formFeedback\";\nimport MyContacts from \"../myContacts/MyContacts\";\nimport scss from \"./SectionContacts.module.scss\";\n\nconst SectionContacts = () => {\n  const { theme } = useContext(Context);\n  return (\n    <section className={clsx(scss.contacts, theme && scss[\"contacts-light\"])}>\n      <div className=\"container\">\n        <div className={scss.content}>\n          <MyContacts />\n          <FormFeedback />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionContacts;\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SectionContacts from '../../components/sectionContacts';\n\nconst PageContacts = () => {\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    document.title = t('title.contacts');\n    window.scrollTo(0, 0);\n  }, [t]);\n\n  return <SectionContacts />;\n};\n\nexport default PageContacts;\n"],"names":["URL_API","concat","FormError","_ref","name","_jsx","ErrorMessage","render","message","className","scss","children","schema","object","string","trim","required","telegram","email","FormFeedback","isButtonDisabled","setButtonDisabled","useState","t","useTranslation","notifySuccess","Formik","initialValues","validationSchema","onSubmit","async","values","actions","resetForm","Notiflix","success","console","log","fetch","method","headers","body","JSON","stringify","error","failure","SendMessageEmail","text","axios","post","chat_id","SendMessageTg","_jsxs","Form","autoComplete","Field","type","placeholder","as","disabled","MyContacts","href","width","height","icons","target","rel","src","alt","SectionContacts","theme","useContext","Context","clsx","PageContacts","useEffect","document","title","window","scrollTo"],"sourceRoot":""}
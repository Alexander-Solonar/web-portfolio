{"version":3,"file":"static/js/181.e05a0ae9.chunk.js","mappings":"4MACA,QAA2B,kCAA3B,EAA8E,wCAA9E,EAA6H,8BAA7H,EAAkK,8BAAlK,EAAuM,8BAAvM,EAA6O,+BAA7O,EAAoR,+B,aCKpR,MAiCA,EAjCwBA,IAAe,IAAd,KAAEC,GAAMD,EAC/B,MAAM,MAAEE,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,WAASC,WAAWC,EAAAA,EAAAA,GAAKC,EAAeR,GAASQ,GAAwBC,UACvEJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWG,UACxBJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWE,EAAUC,SACtBV,EAAKW,KAAIC,IAAA,IAAC,GAAEC,EAAE,KAAEC,EAAI,WAAEC,GAAYH,EAAA,OACjCI,EAAAA,EAAAA,MAAA,MAAaT,UAAWE,EAAUC,SAAA,EAChCJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWE,EAAWC,SAAEI,KAE5BR,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CACHC,GAAE,qBAAAC,OAAuBN,GACzBN,UAAWE,EACXW,MAAO,CAAEC,KAAMjB,GAAWM,UAE1BJ,EAAAA,EAAAA,KAAA,OACEC,UAAWE,EACXa,IAAKP,EACLQ,IAAG,GAAAJ,OAAKL,EAAI,iBACZU,MAAO,IACPC,OAAQ,UAbLZ,EAgBJ,SAIH,ECAd,EA7BqBa,KACnB,MAAOC,EAAoBC,IAAyBC,EAAAA,EAAAA,UAAoB,KAClE,KAAEC,EAAI,EAAEC,IAAMC,EAAAA,EAAAA,MACdC,EAAMH,EAAKI,iBAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAQN,EAAE,gBAAgB,GAClC,CAACA,KAEJI,EAAAA,EAAAA,YAAU,KACRG,OAAOC,SAAS,EAAG,GAEnB,WACE,IACE,MAAMC,QAAiBC,EAAAA,GAAkCR,GACzDL,EAAsBY,EACxB,CAAE,MAAOE,GACPC,MAAMD,EAAME,QACd,CACD,EAPD,EAOI,GACH,CAACX,KAGF3B,EAAAA,EAAAA,KAAAuC,EAAAA,SAAA,CAAAnC,UACEJ,EAAAA,EAAAA,KAACwC,EAAe,CAAC9C,KAAM2B,KACtB,C,iEC7BP,MAWMoB,EARS,yDAUFC,EAAwBC,gBACZC,EAAAA,EAAMC,IAAI,GAADhC,OAAI4B,EAAW,eAAA5B,OAAcc,EAAG,WAChDjC,KAGLoD,EAAaH,MAAOhB,EAAaoB,WACrBH,EAAAA,EAAMC,IAAI,GAADhC,OAC3B4B,EAAW,eAAA5B,OAAcc,EAAG,KAAAd,OAAIkC,EAAS,WAE9BrD,KAGLsD,EAAsBL,gBACVC,EAAAA,EAAMC,IAAI,GAADhC,OAAI4B,EAAW,YAAA5B,OAAWc,EAAG,WAC7CjC,I","sources":["webpack://web-portfolio/./src/components/sectionProjects/SectionProjects.module.scss?5ede","components/sectionProjects/SectionProjects.jsx","pages/pageProjects/pageProjects.tsx","services/APIFirebase.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"projects\":\"SectionProjects_projects__NXmio\",\"projects-light\":\"SectionProjects_projects-light__y1c2b\",\"list\":\"SectionProjects_list__q1Ubw\",\"item\":\"SectionProjects_item__DQDDq\",\"link\":\"SectionProjects_link__HS+er\",\"title\":\"SectionProjects_title__sIiCs\",\"image\":\"SectionProjects_image__pIQgJ\"};","import { useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport clsx from 'clsx';\nimport scss from './SectionProjects.module.scss';\n\nconst SectionProjects = ({ data }) => {\n  const { theme } = useContext(Context);\n  const location = useLocation();\n\n  return (\n    <section className={clsx(scss.projects, theme && scss['projects-light'])}>\n      <div className=\"container\">\n        <ul className={scss.list}>\n          {data.map(({ id, name, imgProject }) => (\n            <li key={id} className={scss.item}>\n              <h3 className={scss.title}>{name}</h3>\n\n              <Link\n                to={`/projects/project/${id}`}\n                className={scss.link}\n                state={{ from: location }}\n              >\n                <img\n                  className={scss.image}\n                  src={imgProject}\n                  alt={`${name} site preview`}\n                  width={550}\n                  height={370}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionProjects;\n","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as APIFirebase from '../../services/APIFirebase';\nimport SectionProjects from '../../components/sectionProjects';\nimport { Project } from '../../interfaces';\n\nconst PageProjects = () => {\n  const [projectsCollection, setProjectsCollection] = useState<Project[]>([]);\n  const { i18n, t } = useTranslation();\n  const lng = i18n.resolvedLanguage as string;\n\n  useEffect(() => {\n    document.title = t('title.gallery');\n  }, [t]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    (async () => {\n      try {\n        const projects = await APIFirebase.getProjectsCollection(lng);\n        setProjectsCollection(projects);\n      } catch (error: any) {\n        alert(error.message);\n      }\n    })();\n  }, [lng]);\n\n  return (\n    <>\n      <SectionProjects data={projectsCollection} />\n    </>\n  );\n};\n\nexport default PageProjects;\n","import axios from 'axios';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBFA2Q7UU0AqZEyl7eNMXGcyeO0yrZsT-M',\n  authDomain: 'my-portfolio-c3ff0.firebaseapp.com',\n  databaseURL: 'https://my-portfolio-c3ff0-default-rtdb.firebaseio.com',\n  projectId: 'my-portfolio-c3ff0',\n  storageBucket: 'my-portfolio-c3ff0.appspot.com',\n  messagingSenderId: '457923746444',\n  appId: '1:457923746444:web:aa71a9e1d30bf1a7d6b9a9',\n  measurementId: 'G-8YTR94JDSK',\n};\n\nconst databaseURL = firebaseConfig.databaseURL;\n\nexport const getProjectsCollection = async (lng: string) => {\n  const response = await axios.get(`${databaseURL}/portfolio-${lng}.json`);\n  return response.data;\n};\n\nexport const getProject = async (lng: string, projectId: string) => {\n  const response = await axios.get(\n    `${databaseURL}/portfolio-${lng}/${projectId}.json`\n  );\n  return response.data;\n};\n\nexport const getSkillsCollection = async (lng: string) => {\n  const response = await axios.get(`${databaseURL}/skills-${lng}.json`);\n  return response.data;\n};\n"],"names":["_ref","data","theme","useContext","Context","location","useLocation","_jsx","className","clsx","scss","children","map","_ref2","id","name","imgProject","_jsxs","Link","to","concat","state","from","src","alt","width","height","PageProjects","projectsCollection","setProjectsCollection","useState","i18n","t","useTranslation","lng","resolvedLanguage","useEffect","document","title","window","scrollTo","projects","APIFirebase","error","alert","message","_Fragment","SectionProjects","databaseURL","getProjectsCollection","async","axios","get","getProject","projectId","getSkillsCollection"],"sourceRoot":""}
{"version":3,"file":"static/js/273.864c9a87.chunk.js","mappings":"wLACA,EAA0B,uBAA1B,EAAwD,oB,aCOxD,MAWA,EAX8BA,IAAe,IAAd,KAAEC,GAAMD,EACrC,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAWG,EAAgBF,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAUC,IAAI,cACxBP,EAAAA,EAAAA,KAAA,KAAGC,UAAWG,EAAaF,SAAEH,QAE3B,C,8FCdV,QAA2B,kCAA3B,EAAoE,8BAApE,EAAyG,8BAAzG,EAA+I,+B,aCQ/I,MA8BA,EA9BkDD,IAAe,IAAd,KAAEU,GAAMV,EACzD,MAAMW,GAAWC,EAAAA,EAAAA,MAEjB,OACEV,EAAAA,EAAAA,KAAA,WAASC,UAAWG,EAAiBF,UACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAWG,EAAaF,SACzBM,EAAKG,KAAIC,IAAA,IAAC,GAAEC,EAAE,KAAEC,EAAI,WAAEC,GAAYH,EAAA,OACjCT,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAWG,EAAcF,SAAEY,KAC/Bd,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CACHC,GAAE,qBAAAC,OAAuBL,GACzBZ,UAAWG,EACXe,MAAO,CAAEC,KAAMX,GAAWP,UAE1BF,EAAAA,EAAAA,KAAA,OACEK,IAAKU,EACLR,IAAG,GAAAW,OAAKJ,EAAI,iBACZO,MAAO,IACPC,OAAQ,UAXLT,EAcJ,SAIH,E,aC5Bd,MAqCA,EArCqBU,KACnB,MAAOC,EAAoBC,IAAyBC,EAAAA,EAAAA,UAAoB,KACjEC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC7B,KAAEK,IAASC,EAAAA,EAAAA,MACXC,EAAMF,EAAKG,iBAEXC,GAAgBC,EAAAA,EAAAA,cAAYC,UAChC,IACE,MAAMC,QAAiBC,EAAAA,GAAkCN,GACzDR,EAAsBa,EACxB,CAAE,MAAOT,GACPC,EAASD,EAAMW,QACjB,CAAC,QACCZ,GAAa,EACf,IACC,CAACK,IASJ,OAPAQ,EAAAA,EAAAA,YAAU,KACRC,OAAOC,SAAS,EAAG,GACnBC,SAASC,MAAQd,EAAKe,EAAE,iBAExBX,GAAe,GACd,CAACJ,EAAMI,KAGRnC,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA7C,UACIyB,IACAxB,EAAAA,EAAAA,MAAA4C,EAAAA,SAAA,CAAA7C,SAAA,CACG2B,IAAS7B,EAAAA,EAAAA,KAACgD,EAAAA,EAAK,CAACjD,KAAM8B,KACrBA,IAAS7B,EAAAA,EAAAA,KAACiD,EAAe,CAACzC,KAAMgB,QAGrC,C","sources":["webpack://web-portfolio/./src/components/error/Error.module.scss?3d02","components/error/Error.tsx","webpack://web-portfolio/./src/components/sectionProjects/SectionProjects.module.scss?5ede","components/sectionProjects/SectionProjects.tsx","pages/pageProjects/pageProjects.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Error_content__06mK+\",\"text\":\"Error_text__LrxYV\"};","import { FC } from 'react';\nimport errorImg from '../../assets/images/error.webp';\nimport scss from './Error.module.scss';\n\ninterface ErrorProps {\n  text: string | null;\n}\n\nconst Error: FC<ErrorProps> = ({ text }) => {\n  return (\n    <div className=\"container\">\n      <div className={scss['content']}>\n        <img src={errorImg} alt=\"emotions\" />\n        <p className={scss['text']}>{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"projects\":\"SectionProjects_projects__NXmio\",\"list\":\"SectionProjects_list__q1Ubw\",\"link\":\"SectionProjects_link__HS+er\",\"title\":\"SectionProjects_title__sIiCs\"};","import { FC } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Project } from '../../interfaces';\nimport scss from './SectionProjects.module.scss';\n\ninterface SectionProjectsProps {\n  data: Project[];\n}\n\nconst SectionProjects: FC<SectionProjectsProps> = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <section className={scss['projects']}>\n      <div className=\"container\">\n        <ul className={scss['list']}>\n          {data.map(({ id, name, imgProject }) => (\n            <li key={id}>\n              <h3 className={scss['title']}>{name}</h3>\n              <Link\n                to={`/projects/project/${id}`}\n                className={scss['link']}\n                state={{ from: location }}\n              >\n                <img\n                  src={imgProject}\n                  alt={`${name} site preview`}\n                  width={550}\n                  height={370}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionProjects;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Project } from '../../interfaces';\nimport * as APIFirebase from '../../services/APIFirebase';\nimport SectionProjects from '../../components/sectionProjects';\nimport Error from '../../components/error';\n\nconst PageProjects = () => {\n  const [projectsCollection, setProjectsCollection] = useState<Project[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { i18n } = useTranslation();\n  const lng = i18n.resolvedLanguage as string;\n\n  const fetchProjects = useCallback(async () => {\n    try {\n      const projects = await APIFirebase.getProjectsCollection(lng);\n      setProjectsCollection(projects);\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [lng]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    document.title = i18n.t('title.gallery');\n\n    fetchProjects();\n  }, [i18n, fetchProjects]);\n\n  return (\n    <>\n      {!isLoading && (\n        <>\n          {error && <Error text={error} />}\n          {!error && <SectionProjects data={projectsCollection} />}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PageProjects;\n"],"names":["_ref","text","_jsx","className","children","_jsxs","scss","src","errorImg","alt","data","location","useLocation","map","_ref2","id","name","imgProject","Link","to","concat","state","from","width","height","PageProjects","projectsCollection","setProjectsCollection","useState","isLoading","setIsLoading","error","setError","i18n","useTranslation","lng","resolvedLanguage","fetchProjects","useCallback","async","projects","APIFirebase","message","useEffect","window","scrollTo","document","title","t","_Fragment","Error","SectionProjects"],"sourceRoot":""}
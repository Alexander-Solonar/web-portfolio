{"version":3,"file":"static/js/411.5fb5d2dc.chunk.js","mappings":"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","sources":["components/formik/schemas.ts","services/SendMessageTg.ts","webpack://web-portfolio/./src/components/formik/Formik.module.scss?9562","components/formik/FormikError.tsx","components/formik/FormikInput.tsx","components/formik/FormikTextarea.tsx","components/formik/FormikControl.tsx","webpack://web-portfolio/./src/components/formFeedback/FormFeedback.module.scss?838b","components/formFeedback/FormFeedback.tsx","webpack://web-portfolio/./src/components/myContacts/MyContacts.module.scss?a0bf","components/myContacts/MyContacts.tsx","webpack://web-portfolio/./src/components/sectionContacts/SectionContacts.module.scss?115c","components/sectionContacts/SectionContacts.tsx","pages/pageContacts/PageContacts.tsx"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const schema = object({\n  name: string().trim().required('Name is a required field'),\n  telegram: string().trim(),\n  email: string().email().required('Email is a required field'),\n  message: string().trim().required('Message is a required field'),\n});\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst TOKEN = '6758528711:AAEjayHvFKVDXyoLE5L4pwWbUVTF134hlSI';\nconst CHAT_ID = '-1002010097355';\nconst URL_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\n\ninterface Values {\n  name: string;\n  telegram: string;\n  email: string;\n  message: string;\n}\n\nexport const SendMessageTg = async (values: Values) => {\n  const { name, telegram, email, message } = values;\n  const text = `Повідомлення від: ${name}\\n${message}\\nTelegram: ${telegram}\\nEmail: ${email}`;\n  try {\n    await axios.post(\n      URL_API,\n      {\n        chat_id: CHAT_ID,\n        text,\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n  } catch (error: any) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Formik_label__PQ4oW\",\"error\":\"Formik_error__VykRM\"};","import { FC } from 'react';\nimport { ErrorMessage } from 'formik';\nimport scss from './Formik.module.scss';\n\ninterface FormErrorProps {\n  name: string;\n}\n\nconst FormikError: FC<FormErrorProps> = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p className={scss.error}>{message}</p>}\n    />\n  );\n};\n\nexport default FormikError;\n","import { Field } from 'formik';\nimport scss from './Formik.module.scss';\nimport { FC } from 'react';\nimport FormikError from './FormikError';\n\ninterface FormikInputProps {\n  label: string;\n  name: string;\n  [x: string]: any;\n}\n\nconst FormikInput: FC<FormikInputProps> = ({ label, name, ...rest }) => {\n  return (\n    <label className={scss['label']} htmlFor={name}>\n      {label}\n      <Field id={name} name={name} {...rest} />\n      <FormikError name={name} />\n    </label>\n  );\n};\n\nexport default FormikInput;\n","import { FC } from 'react';\nimport { Field } from 'formik';\n\nimport scss from './Formik.module.scss';\nimport FormikError from './FormikError';\n\ninterface FormikTextareaProps {\n  label: string;\n  name: string;\n  [x: string]: any;\n}\n\nconst FormikTextarea: FC<FormikTextareaProps> = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <label className={scss['label']} htmlFor={name}>\n      {label}\n      <Field id={name} as=\"textarea\" name={name} {...rest} />\n      <FormikError name={name} />\n    </label>\n  );\n};\n\nexport default FormikTextarea;\n","import { FC } from 'react';\nimport FormikInput from './FormikInput';\nimport FormikTextarea from './FormikTextarea';\n\ninterface FormikControlProps {\n  control: string;\n  label: string;\n  name: string;\n  [x: string]: any;\n}\n\nconst FormikControl: FC<FormikControlProps> = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'textarea':\n      return <FormikTextarea {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormFeedback_form__oWu83\",\"block\":\"FormFeedback_block__-z-K5\",\"input\":\"FormFeedback_input__Er6lC\",\"textarea\":\"FormFeedback_textarea__Ken1p\",\"button\":\"FormFeedback_button__htcIx\",\"showBnt\":\"FormFeedback_showBnt__pyi5y\"};","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { schema } from '../formik/schemas';\nimport { SendMessageTg } from '../../services/SendMessageTg';\nimport { FormFeedbackValues } from '../../interfaces';\nimport FormikControl from '../formik/FormikControl';\nimport Notiflix from 'notiflix';\nimport scss from './FormFeedback.module.scss';\n\nconst FormFeedback = () => {\n  const [isButtonDisabled, setButtonDisabled] = useState(false);\n  const { t } = useTranslation();\n  const notifySuccess = t('form.notify');\n\n  const initialValues = {\n    name: '',\n    telegram: '',\n    email: '',\n    message: '',\n  };\n\n  const handleSubmit = async (\n    values: FormFeedbackValues,\n    actions: FormikHelpers<FormFeedbackValues>\n  ) => {\n    setButtonDisabled(true);\n    actions.resetForm();\n    Notiflix.Notify.success(notifySuccess);\n    SendMessageTg(values);\n    setButtonDisabled(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={scss.form} autoComplete=\"off\">\n        <div className={scss.block}>\n          <FormikControl\n            className={scss.input}\n            control=\"input\"\n            type=\"text\"\n            name=\"name\"\n            label={t('form.name')}\n            placeholder={t('form.placeholderN')}\n          />\n          <FormikControl\n            className={scss.input}\n            control=\"input\"\n            type=\"text\"\n            name=\"telegram\"\n            label={t('form.telegram')}\n            placeholder={t('form.placeholderT')}\n          />\n        </div>\n        <FormikControl\n          className={scss.input}\n          control=\"input\"\n          type=\"email\"\n          name=\"email\"\n          label={t('form.email')}\n          placeholder={t('form.placeholderE')}\n        />\n        <FormikControl\n          className={scss.textarea}\n          control=\"textarea\"\n          name=\"message\"\n          label={t('form.message')}\n          placeholder={t('form.placeholderM')}\n        />\n        <button className={scss.button} type=\"submit\" disabled={isButtonDisabled}>\n          {t('form.button')}\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FormFeedback;\n","// extracted by mini-css-extract-plugin\nexport default {\"block-contacts\":\"MyContacts_block-contacts__SU6In\",\"title\":\"MyContacts_title__ZpBLo\",\"list\":\"MyContacts_list__ADKv3\",\"item\":\"MyContacts_item__DIEE+\",\"link\":\"MyContacts_link__ZYmsc\",\"sun-title\":\"MyContacts_sun-title__RSPpj\",\"address\":\"MyContacts_address__RWpDa\"};","import { useTranslation } from 'react-i18next';\nimport SpriteIcon from '../spriteIcon';\nimport contacts from '../../data/contacts.json';\nimport flag from '../../assets/images/ukraine.png';\nimport scss from './MyContacts.module.scss';\n\nconst MyContacts = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={scss['block-contacts']}>\n      <h1 className={scss['title']}>{t('contacts.title')}</h1>\n      <ul className={scss['list']}>\n        {contacts.map(({ id, icon, label, ...rest }) => (\n          <li key={id} className={scss['item']}>\n            <a className={scss['link']} {...rest}>\n              <SpriteIcon width={22} height={22} icon={icon} />\n              <span>{label}</span>\n            </a>\n          </li>\n        ))}\n      </ul>\n      <h3 className={scss['sun-title']}>{t('contacts.sub')} :</h3>\n      <address className={scss['address']}>\n        <a\n          className={scss.link}\n          href=\"https://goo.gl/maps/qAHahXqh9R1bDvRt6\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer nofollow\"\n        >\n          {t('location')} <img width={24} src={flag} alt=\"flag-ukr\" />\n        </a>\n      </address>\n    </div>\n  );\n};\n\nexport default MyContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"SectionContacts_contacts__aOCHx\",\"content\":\"SectionContacts_content__P9xen\"};","import FormFeedback from '../formFeedback';\nimport MyContacts from '../myContacts/MyContacts';\nimport scss from './SectionContacts.module.scss';\n\nconst SectionContacts = () => {\n  return (\n    <section className={scss['contacts']}>\n      <div className=\"container\">\n        <div className={scss['content']}>\n          <MyContacts />\n          <FormFeedback />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionContacts;\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SectionContacts from '../../components/sectionContacts';\n\nconst PageContacts = () => {\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    document.title = t('title.contacts');\n    window.scrollTo(0, 0);\n  }, [t]);\n\n  return <SectionContacts />;\n};\n\nexport default PageContacts;\n"],"names":["schema","object","name","string","trim","required","telegram","email","message","URL_API","concat","_ref","_jsx","ErrorMessage","render","className","scss","children","label","rest","_jsxs","htmlFor","Field","id","FormikError","props","as","control","FormikInput","FormikTextarea","FormFeedback","isButtonDisabled","setButtonDisabled","useState","t","useTranslation","notifySuccess","Formik","initialValues","validationSchema","onSubmit","async","values","actions","resetForm","Notiflix","success","text","axios","post","chat_id","headers","error","failure","SendMessageTg","Form","autoComplete","FormikControl","type","placeholder","disabled","MyContacts","contacts","map","icon","SpriteIcon","width","height","href","target","rel","src","alt","SectionContacts","PageContacts","useEffect","document","title","window","scrollTo"],"sourceRoot":""}